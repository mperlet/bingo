{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","word","check","words","setWords","isWinner","className","map","e","i","shouldBreak","onClick","_","w","j","a","Math","random","sort","b","prompt","split","concat","Array","fill","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNA6GeA,MArGf,WAAgB,IAAD,EACaC,mBACxB,CACE,CACEC,KAAM,aACNC,OAAO,GAET,CACED,KAAM,YACNC,OAAO,GAET,CACED,KAAM,UACNC,OAAO,GAET,CACED,KAAM,QACNC,OAAO,GAET,CACED,KAAM,cACNC,OAAO,GAET,CACED,KAAM,eACNC,OAAO,GAET,CACED,KAAM,MACNC,OAAO,GAET,CACED,KAAM,OACNC,OAAO,GAET,CACED,KAAM,SACNC,OAAO,KArCA,mBACNC,EADM,KACCC,EADD,KA2CLC,EAAYF,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAC7CC,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAC7CC,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAC7CC,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAC7CC,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAC7CC,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAC7CC,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAC7CC,EAAM,GAAGD,OAASC,EAAM,GAAGD,OAASC,EAAM,GAAGD,MAEjE,OACE,mCACA,sBAAKI,UAAU,iBAAf,UACKH,EAAMI,KAAI,SAACC,EAAEC,GACZ,IAAMC,GAAgBD,EAAE,GAAK,IAAM,EACnC,OAAO,qCAAE,qBAETE,QAAS,SAAAC,GAEPR,EAASD,EAAMI,KAAI,SAACM,EAAGC,GACrB,OAAGA,IAAML,EACA,2BAAII,GAAX,IAAcX,OAAQW,EAAEX,QAEjBW,OAKbP,UAAS,eAAWE,EAAEN,MAAQ,QAAU,IAb/B,SAauCM,EAAEP,MAZ7CO,EAAEP,MAYuDS,GAAe,6BAInF,sBAAKJ,UAAU,OAAf,UACE,gCACGD,GAAY,8EAAyBA,GAAY,sDAEpD,8BACE,oBAAIM,QAAU,SAAAC,GAAMR,EAAsBD,EAnF/CI,KAAI,SAAAQ,GAAC,MAAI,CAACC,KAAKC,SAAUF,MACzBG,MAAK,SAACH,EAAGI,GAAJ,OAAUJ,EAAE,GAAKI,EAAE,MACxBZ,KAAI,SAAAQ,GAAC,OAAIA,EAAE,QAiFN,iDAEF,qBACIJ,QAAS,SAAAC,GACP,IAAMH,EAAIW,OAAO,yCACjB,GAAS,OAANX,GAAoB,KAANA,EAAjB,CAGA,IAAMI,EAAIJ,EAAEY,MAAM,KAAKC,OAAQ,IAAIC,MAAM,GAAIC,KAAK,iBAAOC,OAAO,EAAE,GAClErB,EACES,EAAEN,KAAI,SAAAN,GAAS,MAAO,CAACA,OAAMC,OAAM,SAR3C,SAWM,gECxFGwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f28088cb.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nconst shuffleArray = arr => arr\n  .map(a => [Math.random(), a])\n  .sort((a, b) => a[0] - b[0])\n  .map(a => a[1]);\n\nfunction App() {\n  const [words, setWords] = useState(\n    [\n      {\n        word: \"Superkraft\",\n        check: false\n      },\n      {\n        word: \"Vertrauen\",\n        check: false\n      },\n      {\n        word: \"Produkt\",\n        check: false\n      },\n      {\n        word: \"Fokus\",\n        check: false\n      },\n      {\n        word: \"Home-Office\",\n        check: false\n      },\n      {\n        word: \"Entscheidung\",\n        check: false\n      },\n      {\n        word: \"API\",\n        check: false\n      },\n      {\n        word: \"Chat\",\n        check: false\n      },\n      {\n        word: \"Webcam\",\n        check: false\n      },\n      \n    ]\n  );\n    \n    const isWinner = (words[0].check && words[1].check && words[2].check) || \n                     (words[3].check && words[4].check && words[5].check) || \n                     (words[6].check && words[7].check && words[8].check) || \n                     (words[0].check && words[3].check && words[6].check) || \n                     (words[1].check && words[4].check && words[7].check) || \n                     (words[2].check && words[5].check && words[8].check) || \n                     (words[0].check && words[4].check && words[8].check) || \n                     (words[2].check && words[4].check && words[6].check);\n\n  return (\n    <>\n    <div className=\"App App-header\">\n        {words.map((e,i) => {\n          const shouldBreak = ((i+1) % 3 === 0);\n          return <><div \n          key={e.word}\n          onClick={_ => {\n\n            setWords(words.map((w, j) => {\n              if(j === i) {\n                return {...w, check: !w.check}\n              } else {\n                return w\n              }\n            }))\n          }}\n          \n          className={`word ${(e.check ? 'check' : '')}`}>{e.word}</div>{shouldBreak && <br/>}</>\n        })}\n       \n        \n    <div className=\"flex\">\n      <div> \n        {isWinner && <h3>Winner ü•≥ü•≥ü•≥</h3>}{!isWinner && <h3>Nope üëé</h3>}\n      </div>\n      <div>\n        <h3 onClick={ _ => {setWords(shuffleArray(words))}}>üé≤ Shuffle üé≤</h3>\n      </div>\n      <div\n          onClick={_ => {\n            const i = prompt(\"Insert nine words separated by commas\");\n            if(i === null || i === '') {\n              return;\n            }\n            const w = i.split(',').concat((new Array(9)).fill(\"ü§∑\")).splice(0,9)\n            setWords(\n              w.map(word => {return {word, check:false}})\n            )\n          }}>\n            <h3>Import ‚ÜóÔ∏è</h3>\n      </div>\n    </div>\n    </div>\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}